//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_86
.address_size 64

	// .globl	softmax_kernel          // -- Begin function softmax_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @softmax_kernel
.visible .entry softmax_kernel(
	.param .u64 .ptr .global .align 1 softmax_kernel_param_0,
	.param .u64 .ptr .global .align 1 softmax_kernel_param_1,
	.param .u32 softmax_kernel_param_2,
	.param .u32 softmax_kernel_param_3,
	.param .u32 softmax_kernel_param_4,
	.param .u32 softmax_kernel_param_5,
	.param .u64 .ptr .global .align 1 softmax_kernel_param_6
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b32 	%r<97>;
	.reg .f32 	%f<41>;
	.reg .b64 	%rd<12>;
	.loc	1 83 0                          // 02-fused-softmax.py:83:0
$L__func_begin0:
	.loc	1 83 0                          // 02-fused-softmax.py:83:0

// %bb.0:
	ld.param.u32 	%r25, [softmax_kernel_param_5];
	ld.param.u32 	%r24, [softmax_kernel_param_4];
	ld.param.u32 	%r22, [softmax_kernel_param_2];
$L__tmp0:
	.loc	1 86 30                         // 02-fused-softmax.py:86:30
	// begin inline asm
	mov.u32 %r96, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd5, [softmax_kernel_param_1];
	.loc	1 93 35                         // 02-fused-softmax.py:93:35
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 255;
	.loc	1 96 29                         // 02-fused-softmax.py:96:29
	setp.lt.s32 	%p3, %r4, %r25;
	.loc	1 88 57                         // 02-fused-softmax.py:88:57
	setp.ge.s32 	%p4, %r96, %r24;
	setp.lt.s32 	%p5, %r96, %r24;
	.loc	1 90 46                         // 02-fused-softmax.py:90:46
	mul.lo.s32 	%r30, %r96, %r22;
	.loc	1 90 36                         // 02-fused-softmax.py:90:36
	mul.wide.s32 	%rd6, %r30, 4;
	.loc	1 94 37                         // 02-fused-softmax.py:94:37
	mul.wide.u32 	%rd7, %r4, 4;
	.loc	1 88 57                         // 02-fused-softmax.py:88:57
	add.s64 	%rd2, %rd5, %rd7;
	.loc	1 94 37                         // 02-fused-softmax.py:94:37
	add.s64 	%rd3, %rd2, %rd6;
	.loc	1 97 22                         // 02-fused-softmax.py:97:22
	shl.b32 	%r31, %r4, 2;
	mov.u32 	%r32, global_smem;
	add.s32 	%r58, %r32, %r31;
	selp.b32 	%r33, 4, 0, %p5;
	selp.b32 	%r29, %r33, 0, %p3;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 cp.async.ca.shared.global [ %r58 + 0 ], [ %rd3 + 0 ], 0x4, %r29;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 88 57                         // 02-fused-softmax.py:88:57
	@%p4 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph
	.loc	1 0 57                          // 02-fused-softmax.py:0:57
	ld.param.u32 	%r23, [softmax_kernel_param_3];
	ld.param.u64 	%rd4, [softmax_kernel_param_0];
	// begin inline asm
	mov.u32 %r27, %nctaid.x;
	// end inline asm
	add.s64 	%rd1, %rd4, %rd7;
	.loc	1 93 35                         // 02-fused-softmax.py:93:35
	and.b32  	%r6, %r3, 31;
	sub.s32 	%r7, %r24, %r27;
	add.s32 	%r36, %r32, 1024;
	shr.u32 	%r37, %r3, 3;
	and.b32  	%r38, %r37, 28;
	add.s32 	%r42, %r36, %r38;
	setp.lt.s32 	%p9, %r3, 8;
	shl.b32 	%r39, %r3, 2;
	add.s32 	%r51, %r36, %r39;
	and.b32  	%r40, %r3, 7;
	setp.eq.s32 	%p7, %r40, 0;
	and.pred  	%p10, %p9, %p7;
	.loc	1 88 57                         // 02-fused-softmax.py:88:57
	add.s32 	%r41, %r96, %r27;
	mul.lo.s32 	%r94, %r22, %r41;
	mul.lo.s32 	%r11, %r27, %r22;
	mul.lo.s32 	%r93, %r96, %r23;
	mul.lo.s32 	%r13, %r27, %r23;
	mov.b32 	%r95, -1;
	setp.eq.s32 	%p8, %r6, 0;
$L__BB0_2:                              // =>This Inner Loop Header: Depth=1
	setp.lt.s32 	%p16, %r96, %r7;
	add.s32 	%r60, %r95, 1;
	setp.gt.u32 	%p17, %r95, 2147483646;
	selp.b32 	%r95, %r60, 0, %p17;
	.loc	1 97 22                         // 02-fused-softmax.py:97:22
	// begin inline asm
	cp.async.wait_group 0x0;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r61, %r95, 10;
	add.s32 	%r62, %r58, %r61;
	ld.shared.f32 	%f3, [%r62];
	selp.f32 	%f4, %f3, 0fFF800000, %p3;
$L__tmp1:
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r63, %f4;
	shfl.sync.bfly.b32	%r64, %r63, 16, 31, -1;
	mov.b32 	%f5, %r64;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f6, %f4, %f5;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r65, %f6;
	shfl.sync.bfly.b32	%r66, %r65, 8, 31, -1;
	mov.b32 	%f7, %r66;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f8, %f6, %f7;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r67, %f8;
	shfl.sync.bfly.b32	%r68, %r67, 4, 31, -1;
	mov.b32 	%f9, %r68;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f10, %f8, %f9;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r69, %f10;
	shfl.sync.bfly.b32	%r70, %r69, 2, 31, -1;
	mov.b32 	%f11, %r70;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f12, %f10, %f11;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r71, %f12;
	shfl.sync.bfly.b32	%r72, %r71, 1, 31, -1;
	mov.b32 	%f13, %r72;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f14, %f12, %f13;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r43, %f14;
	// begin inline asm
	@%p8 st.shared.b32 [ %r42 + 0 ], %r43;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p9 ld.shared.b32 %r44, [ %r51 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r44;
	shfl.sync.bfly.b32	%r73, %r44, 4, 31, -1;
	mov.b32 	%f16, %r73;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f17, %f15, %f16;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r74, %f17;
	shfl.sync.bfly.b32	%r75, %r74, 2, 31, -1;
	mov.b32 	%f18, %r75;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f19, %f17, %f18;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r76, %f19;
	shfl.sync.bfly.b32	%r77, %r76, 1, 31, -1;
	mov.b32 	%f20, %r77;
	.loc	2 163 27                        // standard.py:163:27
	max.f32 	%f21, %f19, %f20;
	.loc	2 184 40                        // standard.py:184:40
	mov.b32 	%r47, %f21;
	// begin inline asm
	@%p10 st.shared.b32 [ %r51 + 0 ], %r47;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f22, [global_smem+1024];
$L__tmp2:
	.loc	1 99 30                         // 02-fused-softmax.py:99:30
	sub.f32 	%f23, %f4, %f22;
	.loc	1 101 27                        // 02-fused-softmax.py:101:27
	mul.f32 	%f2, %f23, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r55, %f1;
	shfl.sync.bfly.b32	%r78, %r55, 16, 31, -1;
	mov.b32 	%f24, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f1, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f25;
	shfl.sync.bfly.b32	%r80, %r79, 8, 31, -1;
	mov.b32 	%f26, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f27;
	shfl.sync.bfly.b32	%r82, %r81, 4, 31, -1;
	mov.b32 	%f28, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f29;
	shfl.sync.bfly.b32	%r84, %r83, 2, 31, -1;
	mov.b32 	%f30, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f31;
	shfl.sync.bfly.b32	%r86, %r85, 1, 31, -1;
	mov.b32 	%f32, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f33;
	// begin inline asm
	@%p8 st.shared.b32 [ %r42 + 0 ], %r49;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p9 ld.shared.b32 %r50, [ %r51 + 0 ];
	// end inline asm
	mov.b32 	%f34, %r50;
	shfl.sync.bfly.b32	%r87, %r50, 4, 31, -1;
	mov.b32 	%f35, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f36;
	shfl.sync.bfly.b32	%r89, %r88, 2, 31, -1;
	mov.b32 	%f37, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f38;
	shfl.sync.bfly.b32	%r91, %r90, 1, 31, -1;
	mov.b32 	%f39, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f40;
	// begin inline asm
	@%p10 st.shared.b32 [ %r51 + 0 ], %r53;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 103 37                        // 02-fused-softmax.py:103:37
	ld.shared.u32 	%r56, [global_smem+1024];
	// begin inline asm
	div.full.f32 %r54, %r55, %r56;
	// end inline asm
	.loc	1 106 45                        // 02-fused-softmax.py:106:45
	mul.wide.s32 	%rd10, %r93, 4;
	add.s64 	%rd8, %rd1, %rd10;
	.loc	1 107 30                        // 02-fused-softmax.py:107:30
	// begin inline asm
	@%p3 st.global.b32 [ %rd8 + 0 ], { %r54 };
	// end inline asm
	.loc	1 88 57                         // 02-fused-softmax.py:88:57
	add.s32 	%r96, %r96, %r27;
	.loc	1 94 37                         // 02-fused-softmax.py:94:37
	mul.wide.s32 	%rd11, %r94, 4;
	add.s64 	%rd9, %rd2, %rd11;
	.loc	1 97 22                         // 02-fused-softmax.py:97:22
	selp.b32 	%r92, 4, 0, %p16;
	selp.b32 	%r59, %r92, 0, %p3;
	// begin inline asm
	@%p2 cp.async.ca.shared.global [ %r58 + 0 ], [ %rd9 + 0 ], 0x4, %r59;
	// end inline asm
	// begin inline asm
	cp.async.commit_group ;
	// end inline asm
	.loc	1 88 57                         // 02-fused-softmax.py:88:57
	add.s32 	%r94, %r94, %r11;
	add.s32 	%r93, %r93, %r13;
	setp.lt.s32 	%p18, %r96, %r24;
	@%p18 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	// begin inline asm
	cp.async.wait_group 0x0;
	// end inline asm
	bar.sync 	0;
	.loc	1 88 4                          // 02-fused-softmax.py:88:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/zhouxulin/intern/triton/python/tutorials/02-fused-softmax.py"
	.file	2 "/home/zhouxulin/intern/triton/python/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 176                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 48                                  // DW_AT_name
.b8 50
.b8 45
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 45
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 104
.b8 111
.b8 117
.b8 120
.b8 117
.b8 108
.b8 105
.b8 110
.b8 47
.b8 105
.b8 110
.b8 116
.b8 101
.b8 114
.b8 110
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 47
.b8 116
.b8 117
.b8 116
.b8 111
.b8 114
.b8 105
.b8 97
.b8 108
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x5c:0x11 DW_TAG_subprogram
.b8 115                                 // DW_AT_name
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6d:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 92                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x82:0x18 DW_TAG_inlined_subroutine
.b32 92                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 99                                  // DW_AT_call_line
.b8 37                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x9a:0x18 DW_TAG_inlined_subroutine
.b32 92                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 102                                 // DW_AT_call_line
.b8 29                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
